---
services:
{% if docker_postgres_exporter_enabled %}
  postgres_server_exporter:
    image: '{{ docker_postgres_server_exporter_image }}'
    container_name: postgres_server_exporter
    restart: always
    environment:
      DATA_SOURCE_NAME: "{{ _docker_postgres_server_exporter_datasource }}"
{% endif %}

{% if docker_postgres_pgadmin_enabled %}
  pgadmin:
    image: '{{ docker_postgres_pgadmin_image }}'
    restart: always
    container_name: "pgadmin"
    environment:
      PGADMIN_DEFAULT_EMAIL: "{{ docker_postgres_pgadmin_user_email }}"
      PGADMIN_DEFAULT_PASSWORD: "{{ docker_postgres_pgadmin_user_password }}"
      PGADMIN_LISTEN_PORT: "80"
      PGADMIN_SERVER_JSON_FILE: /etc/pgadmin/servers.json
      PGADMIN_CONFIG_CONFIG_DATABASE_URI: '"{{ _docker_postgres_server_pgadmin_datasource }}"'  # Need to verify
      PGPASSFILE: /etc/pgadmin/.pgpassfile
    entrypoint: >
      /bin/sh -c "
      mkdir -m 700 /var/lib/pgadmin/storage/postgres_acme.com;
      chown -R pgadmin:pgadmin /var/lib/pgadmin/storage/postgres_acme.com;
      cp /etc/pgadmin/.pgpassfile /var/lib/pgadmin/storage/postgres_acme.com/;
      chmod 600 /var/lib/pgadmin/storage/postgres_acme.com/.pgpassfile;
      /entrypoint.sh
      " 

    volumes:
      - /etc/pgadmin:/etc/pgadmin:ro
      # - /etc/pgadmin/.pgpassfile:/var/lib/pgadmin/storage/postgres_example.com/.pgpassfile:ro
    labels:
{% for docker_label in docker_postgres_pgadmin_docker_labels %}
      - "{{ docker_label }}"
{% endfor %}
{% endif %}

networks:
  default:
    name: "{{ docker_postgres_network }}"
    external: true
